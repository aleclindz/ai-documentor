name: Update Documentation

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  update-docs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Generate documentation
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        # Generate docs in CI mode (no server)
        node --input-type=module -e "
        import { DocumentationGenerator } from './dist/generators/DocumentationGenerator.js';
        import { CodebaseAnalyzer } from './dist/analyzers/CodebaseAnalyzer.js';
        import fs from 'fs';
        
        async function generateDocs() {
          const analyzer = new CodebaseAnalyzer(process.cwd());
          const config = { 
            openaiApiKey: process.env.OPENAI_API_KEY,
            outputDir: './docs'
          };
          const generator = new DocumentationGenerator(config);
          
          const analysis = await analyzer.analyze();
          await generator.generate(analysis);
          
          // Copy docs directory for GitHub Pages
          fs.mkdirSync('./generated-docs', { recursive: true });
          if (fs.existsSync('./docs')) {
            fs.cpSync('./docs', './generated-docs', { recursive: true });
          }
          
          console.log('âœ… Documentation generated successfully!');
        }
        
        generateDocs().catch(console.error);
        "
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: actions/deploy-pages@v3
      with:
        token: ${{ github.token }}
        artifact_name: generated-docs
        
    - name: Upload documentation artifact
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: generated-docs/